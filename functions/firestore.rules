rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth.uid != null;
    }
    function isItMine() {
      return request.auth.uid == resource.data.id;
    }
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if false;
      allow update: if isItMine() && isUpdatingInstrumentId();
      allow delete: if false;
      function isUpdatingInstrumentId() {
        return request.resource.data.diff(resource.data).affectedKeys().hasOnly(['instrumentId', 'notificationTokens']);
      }
    }
    match /songs/{songId} {
      allow read: if isSignedIn();
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
    match /instruments/{instrumentId} {
      allow read: if isSignedIn();
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
    match /games/{gameId} {
      allow read: if false;
      allow create: if request.auth.uid == gameId;
      allow update: if false;
      allow delete: if false;
    }
  }
}