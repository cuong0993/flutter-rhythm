name: Analyze, build and distribute Android application

on:
  push:
    branches:
      - master

env:
  flutter_version: "2.0.2"

jobs:
  buildApk:
    name: Analyze, build and distribute Android application
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v1
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Flutter dependencies
        uses: actions/cache@v1
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.OS }}-flutter-install-cache-${{ env.flutter_version }}
      - name: Set up flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ env.flutter_version }}
      - name: Get dependencies
        run: flutter pub get
      - name: Format source code
        run: find -name "*.dart" -not -path "./lib/generated/*" -exec flutter format --set-exit-if-changed {} \;
      - name: Analyze source code
        run: flutter analyze .
      - name: Add config files
        env:
          KEYSTORE_PROPERTIES: ${{ secrets.KEYSTORE_PROPERTIES }}
          GOOGLE_SERVICES_STAGE_JSON: ${{ secrets.GOOGLE_SERVICES_STAGE_JSON }}
          GOOGLE_SERVICES_PROD_JSON: ${{ secrets.GOOGLE_SERVICES_PROD_JSON }}
          DEBUG_JKS: ${{ secrets.DEBUG_JKS }}
          RELEASE_JKS: ${{ secrets.RELEASE_JKS }}
        run: |
          sudo echo "$KEYSTORE_PROPERTIES" > android/keystore.properties
          sudo echo $GOOGLE_SERVICES_STAGE_JSON > android/app/src/stage/google-services.json
          sudo echo $GOOGLE_SERVICES_PROD_JSON > android/app/src/prod/google-services.json
          sudo echo "$DEBUG_JKS" | base64 -d > android/debug.jks
          sudo echo "$RELEASE_JKS" | base64 -d > android/release.jks
      - name: Build stage application
        run: flutter build apk --flavor stage --split-per-abi
      - name: Build production application
        run: flutter build apk --flavor prod --split-per-abi
      - name: Distribute stage via Firebase
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.STAGE_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: testers
          file: build/app/outputs/flutter-apk/app-armeabi-v7a-stage-release.apk
      - name: Distribute production via Firebase
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.PROD_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: testers
          file: build/app/outputs/flutter-apk/app-armeabi-v7a-prod-release.apk
      - name: Distribute production via Firebase
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.PROD_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: testers
          file: build/app/outputs/flutter-apk/app-arm64-v8a-prod-release.apk
      - name: Distribute production via Firebase
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.PROD_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: testers
          file: build/app/outputs/flutter-apk/app-x86_64-prod-release.apk