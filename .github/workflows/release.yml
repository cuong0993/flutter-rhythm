name: Release
'on':
  push:
    tags:
      - '*'
env:
  flutter_version: 3.7.0
jobs:
  build:
    name: Build
    runs-on: macos-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Cache CocoaPods
        uses: actions/cache@v2
        with:
          path: /Users/runner/Library/Caches/CocoaPods/Pods
          key: '${{ runner.os }}-cache-cocoapods-${{ hashFiles(''pubspec.lock'') }}'
      - name: Cache build
        uses: actions/cache@v2
        with:
          path: |
            ios/Pods
            ~/Library/Developer/Xcode/DerivedData
          key: '${{ runner.os }}-build-cache--${{ hashFiles(''pubspec.lock'') }}'
      - name: Cache Flutter dependencies
        uses: actions/cache@v2
        with:
          path: /Users/runner/hostedtoolcache/flutter
          key: '${{ runner.OS }}-flutter-install-cache-${{ env.flutter_version }}'
      - name: Set up flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '${{ env.flutter_version }}'
      - uses: actions/setup-java@v1
        with:
          java-version: 12.x
      - name: Get dependencies
        run: flutter pub get
      - name: Add config files
        env:
          KEYSTORE_PROPERTIES: '${{ secrets.KEYSTORE_PROPERTIES }}'
          SERVICE_ACCOUNT: '${{ secrets.SERVICE_ACCOUNT }}'
          GOOGLE_SERVICES_STAGE_JSON: '${{ secrets.GOOGLE_SERVICES_STAGE_JSON }}'
          GOOGLE_SERVICES_PROD_JSON: '${{ secrets.GOOGLE_SERVICES_PROD_JSON }}'
          RELEASE_JKS: '${{ secrets.RELEASE_JKS }}'
          GOOGLE_SERVICE_INFO_PLIST: '${{ secrets.GOOGLE_SERVICE_INFO_PLIST }}'
        run: >
          sudo echo "$KEYSTORE_PROPERTIES" > android/key.properties

          sudo echo "$SERVICE_ACCOUNT" > android/service_account.json

          mkdir -p android/app/src/stage

          sudo echo $GOOGLE_SERVICES_STAGE_JSON >
          android/app/src/stage/google-services.json

          mkdir -p android/app/src/prod

          sudo echo $GOOGLE_SERVICES_PROD_JSON >
          android/app/src/prod/google-services.json

          sudo echo "$RELEASE_JKS" | base64 -d > android/release.jks

          mkdir -p ios/Runner/dev

          sudo echo "$GOOGLE_SERVICE_INFO_PLIST" >
          ios/Runner/dev/GoogleService-Info.plist
      - name: Build stage application
        run: >-
          flutter build apk --obfuscate
          --split-debug-info=build/app/outputs/symbols
          --dart-define=ENV_APP_NAME="Hit Notes Stage"
          --dart-define=ENV_FLAVOR=stage
          --dart-define=ENV_FACEBOOK_APP_ID=134284937214878
      - name: Build production application
        run: >-
          flutter build apk --obfuscate
          --split-debug-info=build/app/outputs/symbols --split-per-abi
          --dart-define=ENV_APP_NAME="Hit Notes" --dart-define=ENV_FLAVOR=prod
          --dart-define=ENV_FACEBOOK_APP_ID=134284937214878
      - name: Upload production to Google Play internal track
        run: >-
          cd android; fastlane supply --track=internal
          --apk_paths=../build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk,../build/app/outputs/flutter-apk/app-arm64-v8a-release.apk,../build/app/outputs/flutter-apk/app-x86_64-release.apk
      - name: Setup firebase
        uses: pocket-apps/action-setup-firebase@v2
        with:
          firebase-token: '${{ secrets.FIREBASE_TOKEN }}'
      - name: Distribute stage via Firebase
        run: >-
          firebase appdistribution:distribute
          build/app/outputs/flutter-apk/app-release.apk --app "${{
          secrets.STAGE_APP_ID }}" --release-notes "$(git log -1
          --pretty=short)" --groups testers
      - name: Build iOS
        run: flutter build ios --debug --no-codesign
